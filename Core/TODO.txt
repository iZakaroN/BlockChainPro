- Use optimized binary serialization - partially done
- Fork replay protection
	- add block schain Id
- Transactions:
	- Hash placeholder - done
	- Chaining
	- Merkel tree hashing
	- Validation - placeholder
	- Signing
- Blocks validation
	- Validate accepted blocks - done
- P2P sync
	- nodes	- done
	- Limit number of connections
	- Optimize node connections 
		- Disconnect dead nodes - done
		- by best response while ensure that the entire network is connected - always have at least one distant node)
	- blocks 
		- broadcast - done
		- sync
	- pending transactions
		- broadcast - done
		- sync

	- Multi threaded block sync
	- Find largest valid chain

- Abstract (use it for different performance/security scenarios) - partially done
	- Hash size = baseHashSize*2^x (base 128 = 0 , current 256 hash = 1, future proof hash 512 = 2, 1024 = 3)
	- Algo
	- Target bits
- Tests
	- Hashing - done
	- Block validation - done
	- Threading sync test
		- Miner
		- Block chain sync
		- Cross checks
- Make it SOLID - partially
	- Define interfaces
	- Single responsibility
	- DI
	- Implement feedback as decorator - done
- Make it async	- partially done
- Console command engine ()
	- basic - done
	- Engine feedback lock - done
	- Asp log filtering - done
- Difficulty adjustment
	- On every block - done
	- Limit block adjustment for every block - done
	- Last X blocks
- Mining 
	- Multi threaded mining - done
	- Separate Miner to server and client for pool mining
- Web
	- Exception to HTTP response mapping